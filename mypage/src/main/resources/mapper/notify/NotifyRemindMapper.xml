<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mp.mypage.notify.dao.NotifyRemindMapper">
  <resultMap id="BaseResultMap" type="com.mp.mypage.notify.entity.NotifyRemind">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="sender" jdbcType="VARCHAR" property="sender" />
    <result column="action" jdbcType="VARCHAR" property="action" />
    <result column="object_type" jdbcType="VARCHAR" property="objectType" />
    <result column="object_id" jdbcType="BIGINT" property="objectId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, `type`, sender, `action`, object_type, object_id, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from notify_remind
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from notify_remind
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.mp.mypage.notify.entity.NotifyRemind">
    insert into notify_remind (id, `type`, sender, 
      `action`, object_type, object_id, 
      create_time)
    values (#{id,jdbcType=BIGINT}, #{type,jdbcType=INTEGER}, #{sender,jdbcType=VARCHAR}, 
      #{action,jdbcType=VARCHAR}, #{objectType,jdbcType=VARCHAR}, #{objectId,jdbcType=BIGINT}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.mp.mypage.notify.entity.NotifyRemind">
    insert into notify_remind
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="type != null">
        `type`,
      </if>
      <if test="sender != null">
        sender,
      </if>
      <if test="action != null">
        `action`,
      </if>
      <if test="objectType != null">
        object_type,
      </if>
      <if test="objectId != null">
        object_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="sender != null">
        #{sender,jdbcType=VARCHAR},
      </if>
      <if test="action != null">
        #{action,jdbcType=VARCHAR},
      </if>
      <if test="objectType != null">
        #{objectType,jdbcType=VARCHAR},
      </if>
      <if test="objectId != null">
        #{objectId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.mp.mypage.notify.entity.NotifyRemind">
    update notify_remind
    <set>
      <if test="type != null">
        `type` = #{type,jdbcType=INTEGER},
      </if>
      <if test="sender != null">
        sender = #{sender,jdbcType=VARCHAR},
      </if>
      <if test="action != null">
        `action` = #{action,jdbcType=VARCHAR},
      </if>
      <if test="objectType != null">
        object_type = #{objectType,jdbcType=VARCHAR},
      </if>
      <if test="objectId != null">
        object_id = #{objectId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mp.mypage.notify.entity.NotifyRemind">
    update notify_remind
    set `type` = #{type,jdbcType=INTEGER},
      sender = #{sender,jdbcType=VARCHAR},
      `action` = #{action,jdbcType=VARCHAR},
      object_type = #{objectType,jdbcType=VARCHAR},
      object_id = #{objectId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>